{"version":3,"sources":["webpack:///src/app/users/add-edit.component.ts","webpack:///src/app/users/add-edit.component.html","webpack:///src/app/users/grid/grid.component.ts","webpack:///src/app/users/grid/grid.component.html","webpack:///src/app/users/layout.component.ts","webpack:///src/app/users/layout.component.html","webpack:///src/app/users/list.component.ts","webpack:///src/app/users/list.component.html","webpack:///src/app/users/users-routing.module.ts","webpack:///src/app/users/users.module.ts"],"names":["AddEditComponent","formBuilder","route","router","accountService","alertService","loading","submitted","id","snapshot","params","isAddMode","passwordValidators","minLength","push","required","form","group","firstName","lastName","username","password","getById","pipe","subscribe","x","f","setValue","clear","invalid","createUser","updateUser","register","value","data","success","keepAfterRouteChange","navigate","relativeTo","error","update","controls","onSubmit","templateUrl","GridComponent","filterarray","rowData","rowDataCopy","columnDefs","headerName","field","sortable","filter","getAll","resources","forEach","node","dataReady","changes","searchWord","console","log","e","resourceName","includes","onChangeSearchBar","selector","styleUrls","LayoutComponent","ListComponent","api","setRowData","routes","path","component","children","UsersRoutingModule","forChild","imports","exports","UsersModule","withComponents","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAAsB;;AAAQ;;;;;;AAC9B;;AAAuB;;AAAS;;;;;;AAOhB;;AAAyC;;AAAsB;;;;;;AADnE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAOL;;AAAwC;;AAAqB;;;;;;AADjE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AASL;;AAAwC;;AAAoB;;;;;;AADhE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAML;;AAAuB;;AAAuC;;;;;;AAI9D;;AAAwC;;AAAoB;;;;;;AAC5D;;AAAyC;;AAAsC;;;;;;AAFnF;;AACI;;AACA;;AACJ;;;;;;AAFS;;AAAA;;AACA;;AAAA;;;;;;AAMT;;;;;;;;;;UDjCCA,gB;AAOT,kCACYC,WADZ,EAEYC,KAFZ,EAGYC,MAHZ,EAIYC,cAJZ,EAKYC,YALZ,EAKsC;AAAA;;AAJ1B,eAAAJ,WAAA,GAAAA,WAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AARZ,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,SAAA,GAAY,KAAZ;AAQI;;;;qCAEO;AAAA;;AACP,iBAAKC,EAAL,GAAU,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV;AACA,iBAAKC,SAAL,GAAiB,CAAC,KAAKH,EAAvB,CAFO,CAIP;;AACA,gBAAMI,kBAAkB,GAAG,CAAC,0DAAWC,SAAX,CAAqB,CAArB,CAAD,CAA3B;;AACA,gBAAI,KAAKF,SAAT,EAAoB;AAChBC,gCAAkB,CAACE,IAAnB,CAAwB,0DAAWC,QAAnC;AACH;;AAED,iBAAKC,IAAL,GAAY,KAAKf,WAAL,CAAiBgB,KAAjB,CAAuB;AAC/BC,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CADoB;AAE/BI,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CAFqB;AAG/BK,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB,CAHqB;AAI/BM,sBAAQ,EAAE,CAAC,EAAD,EAAKT,kBAAL;AAJqB,aAAvB,CAAZ;;AAOA,gBAAI,CAAC,KAAKD,SAAV,EAAqB;AACjB,mBAAKP,cAAL,CAAoBkB,OAApB,CAA4B,KAAKd,EAAjC,EACKe,IADL,CACU,8DADV,EAEKC,SAFL,CAEe,UAAAC,CAAC,EAAI;AACZ,qBAAI,CAACC,CAAL,CAAOR,SAAP,CAAiBS,QAAjB,CAA0BF,CAAC,CAACP,SAA5B;;AACA,qBAAI,CAACQ,CAAL,CAAOP,QAAP,CAAgBQ,QAAhB,CAAyBF,CAAC,CAACN,QAA3B;;AACA,qBAAI,CAACO,CAAL,CAAON,QAAP,CAAgBO,QAAhB,CAAyBF,CAAC,CAACL,QAA3B;AACH,eANL;AAOH;AACJ,W,CAED;;;;qCAGW;AACP,iBAAKb,SAAL,GAAiB,IAAjB,CADO,CAGP;;AACA,iBAAKF,YAAL,CAAkBuB,KAAlB,GAJO,CAMP;;AACA,gBAAI,KAAKZ,IAAL,CAAUa,OAAd,EAAuB;AACnB;AACH;;AAED,iBAAKvB,OAAL,GAAe,IAAf;;AACA,gBAAI,KAAKK,SAAT,EAAoB;AAChB,mBAAKmB,UAAL;AACH,aAFD,MAEO;AACH,mBAAKC,UAAL;AACH;AACJ;;;uCAEoB;AAAA;;AACjB,iBAAK3B,cAAL,CAAoB4B,QAApB,CAA6B,KAAKhB,IAAL,CAAUiB,KAAvC,EACKV,IADL,CACU,8DADV,EAEKC,SAFL,CAGQ,UAAAU,IAAI,EAAI;AACJ,oBAAI,CAAC7B,YAAL,CAAkB8B,OAAlB,CAA0B,yBAA1B,EAAqD;AAAEC,oCAAoB,EAAE;AAAxB,eAArD;;AACA,oBAAI,CAACjC,MAAL,CAAYkC,QAAZ,CAAqB,CAAC,GAAD,EAAM;AAAEC,0BAAU,EAAE,MAAI,CAACpC;AAAnB,eAAN,CAArB;AACH,aANT,EAOQ,UAAAqC,KAAK,EAAI;AACL,oBAAI,CAAClC,YAAL,CAAkBkC,KAAlB,CAAwBA,KAAxB;;AACA,oBAAI,CAACjC,OAAL,GAAe,KAAf;AACH,aAVT;AAWH;;;uCAEoB;AAAA;;AACjB,iBAAKF,cAAL,CAAoBoC,MAApB,CAA2B,KAAKhC,EAAhC,EAAoC,KAAKQ,IAAL,CAAUiB,KAA9C,EACKV,IADL,CACU,8DADV,EAEKC,SAFL,CAGQ,UAAAU,IAAI,EAAI;AACJ,oBAAI,CAAC7B,YAAL,CAAkB8B,OAAlB,CAA0B,mBAA1B,EAA+C;AAAEC,oCAAoB,EAAE;AAAxB,eAA/C;;AACA,oBAAI,CAACjC,MAAL,CAAYkC,QAAZ,CAAqB,CAAC,IAAD,EAAO;AAAEC,0BAAU,EAAE,MAAI,CAACpC;AAAnB,eAAP,CAArB;AACH,aANT,EAOQ,UAAAqC,KAAK,EAAI;AACL,oBAAI,CAAClC,YAAL,CAAkBkC,KAAlB,CAAwBA,KAAxB;;AACA,oBAAI,CAACjC,OAAL,GAAe,KAAf;AACH,aAVT;AAWH;;;8BA/CO;AAAE,mBAAO,KAAKU,IAAL,CAAUyB,QAAjB;AAA4B;;;;;;;yBA5C7BzC,gB,EAAgB,2H,EAAA,+H,EAAA,uH,EAAA,6H,EAAA,2H;AAAA,O;;;cAAhBA,gB;AAAgB,qC;AAAA,iB;AAAA,gB;AAAA,2yB;AAAA;AAAA;ACR7B;;AACA;;AACA;;AAAyB;AAAA,qBAAY,IAAA0C,QAAA,EAAZ;AAAsB,aAAtB;;AACrB;;AACI;;AACI;;AAAuB;;AAAU;;AACjC;;AACA;;AAGJ;;AACA;;AACI;;AAAsB;;AAAS;;AAC/B;;AACA;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAsB;;AAAQ;;AAC9B;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACA;;AAA4C;;AAAM;;AACtD;;AACJ;;;;AA9CI;;AACA;;AAAA;;AACE;;AAAA;;AAI0E;;AAAA;;AAC/D;;AAAA;;AAM8D;;AAAA;;AAC9D;;AAAA;;AAQ8D;;AAAA;;AAC9D;;AAAA;;AAOG;;AAAA;;AAE+D;;AAAA;;AAClE;;AAAA;;AAOD;;AAAA;;AACE;;AAAA;;;;;;;;;wEDjCL1C,gB,EAAgB;gBAD5B,uDAC4B;iBADlB;AAAE2C,uBAAW,EAAE;AAAf,W;AACkB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AER7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGA;;AACA;;AAOA;;;;;;AAJE;;AAAA,kGAAuB,YAAvB,EAAuB,iBAAvB;;QDLF;;;UAOaC,a;AAYX,+BAAoBxC,cAApB,EAAoD;AAAA;;AAAA;;AAAhC,eAAAA,cAAA,GAAAA,cAAA;AARpB,eAAAyC,WAAA,GAA0B,EAA1B;AACA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAC,WAAA,GAAc,EAAd;AACA,eAAAC,UAAA,GAAa,CACX;AAAEC,sBAAU,EAAE,eAAd;AAA+BC,iBAAK,EAAE,cAAtC;AAAsDC,oBAAQ,EAAE,IAAhE;AAAsEC,kBAAM,EAAE;AAA9E,WADW,EAEX;AAAEH,sBAAU,EAAE,eAAd;AAA+BC,iBAAK,EAAE,cAAtC;AAAsDC,oBAAQ,EAAE,IAAhE;AAAsEC,kBAAM,EAAE;AAA9E,WAFW,CAAb;AAME,eAAKhD,cAAL,CAAoBiD,MAApB,GACG7B,SADH,CACa,UAAA8B,SAAS,EAAI;AAAEA,qBAAS,CAACC,OAAV,CAAkB,UAAAC,IAAI;AAAA,qBAC5C,MAAI,CAACV,OAAL,CAAahC,IAAb,CAAkB0C,IAAlB,CAD4C;AAAA,aAAtB;AAEA,kBAAI,CAACT,WAAL,sBAAuB,MAAI,CAACD,OAA5B;AACvB,WAJL;AAOA,eAAKW,SAAL,GAAiB,IAAjB,CARkD,CASnD;AACA;;;;sCAEWC,O,EAA8C;AACrD,gBAAI,KAAKX,WAAL,IAAoB,IAAxB,EAA8B;AAAE,mBAAKA,WAAL,sBAAuB,KAAKD,OAA5B;AAAuC;AAEzE;;;qCAEK,CAEP;;;8CAEgB;AAAA;;AACf,gBAAI,CAAC,KAAKa,UAAV,EAAsB;AACpB,mBAAKZ,WAAL,sBAAuB,KAAKD,OAA5B;AACA;AAAS;;AAEXc,mBAAO,CAACC,GAAR,CAAY,cAAZ;AACA,iBAAKJ,SAAL,GAAiB,KAAjB;AACA,iBAAKV,WAAL,GAAmB,EAAnB;AACA,iBAAKD,OAAL,CAAaS,OAAb,CAAqB,UAAAO,CAAC,EAAI;AACxB,kBAAIA,CAAC,CAACC,YAAF,CAAeC,QAAf,CAAwB,MAAI,CAACL,UAA7B,CAAJ,EAA8C;AAC5C,sBAAI,CAACZ,WAAL,CAAiBjC,IAAjB,CAAsBgD,CAAtB;AACD;AACJ,aAJC;AAKA,iBAAKL,SAAL,GAAiB,IAAjB;AACD;;;;;;;yBA/CUb,a,EAAa,6H;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,sF;AAAA,gB;AAAA,e;AAAA,yL;AAAA;AAAA;ACT1B;;AAAG;;AAAW;;AACd;;AAAmB;AAAA;AAAA;;AAAnB;;AACA;;AAAQ;AAAA,qBAAS,IAAAqB,iBAAA,EAAT;AAA4B,aAA5B;;AAA+B;;AAAM;;AAC7C;;;;AAFmB;;AAAA;;AAEd;;AAAA;;;;;;;;;wEDMQrB,a,EAAa;gBALzB,uDAKyB;iBALf;AACTsB,oBAAQ,EAAE,UADD;AAETvB,uBAAW,EAAE,uBAFJ;AAGTwB,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;AET1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAGaC,e;;;;;yBAAAA,e;AAAe,O;;;cAAfA,e;AAAe,qC;AAAA,gB;AAAA,e;AAAA,8C;AAAA;AAAA;ACH5B;;AACI;;AACI;;AACJ;;AACJ;;;;;;;;;wEDDaA,e,EAAe;gBAD3B,uDAC2B;iBADjB;AAAEzB,uBAAW,EAAE;AAAf,W;AACiB,U;;;;;;;;;;;;;;;;;;AEH5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMa0B,a;AAST,+BAAoBjE,cAApB,EAAoD;AAAA;;AAAA;;AAAhC,eAAAA,cAAA,GAAAA,cAAA,CAAgC,CARpD;AACA;AACA;;AACA,eAAA0C,OAAA,GAAU,EAAV;AACA,eAAAE,UAAA,GAAa,CACX;AAAEC,sBAAU,EAAE,eAAd;AAA+BC,iBAAK,EAAE;AAAtC,WADW,EAEX;AAAED,sBAAU,EAAE,eAAd;AAA+BC,iBAAK,EAAE;AAAtC,WAFW,CAAb;AAKI,eAAK9C,cAAL,CAAoBiD,MAApB,GACK7B,SADL,CACe,UAAA8B,SAAS;AAAA,mBAAIA,SAAS,CAACC,OAAV,CAAkB,UAAAC,IAAI;AAAA,qBAAI,MAAI,CAACV,OAAL,CAAahC,IAAb,CAAkB0C,IAAlB,CAAJ;AAAA,aAAtB,CAAJ;AAAA,WADxB;AAEII,iBAAO,CAACC,GAAR,CAAY,KAAKf,OAAjB;AACP;;;;qCAEU,CACV;;;sCACOpC,M,EAAM;AAChBA,kBAAM,CAAC4D,GAAP,CAAWC,UAAX,CAAsB,KAAKzB,OAA3B;AACAc,mBAAO,CAACC,GAAR,CAAYnD,MAAZ;AACD;;;;;;;yBApBY2D,a,EAAa,6H;AAAA,O;;;cAAbA,a;AAAa,qC;AAAA,gB;AAAA,e;AAAA;AAAA;AC6C1B;;;;;;;;;wED7CaA,a,EAAa;gBADzB,uDACyB;iBADf;AAAE1B,uBAAW,EAAE,qBAAf;AAAsCwB,qBAAS,EAAE,CAAC,sBAAD;AAAjD,W;AACe,U;;;;;;;;;;;;;;;;;;;;;;AEN1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAMK,MAAM,GAAW,CACnB;AACIC,YAAI,EAAE,EADV;AACcC,iBAAS,EAAE,iEADzB;AAEIC,gBAAQ,EAAE,CACN;AAAEF,cAAI,EAAE,EAAR;AAAYC,mBAAS,EAAE;AAAvB,SADM,EAEN;AAAED,cAAI,EAAE,KAAR;AAAeC,mBAAS,EAAE;AAA1B,SAFM,EAGN;AAAED,cAAI,EAAE,UAAR;AAAoBC,mBAAS,EAAE;AAA/B,SAHM;AAFd,OADmB,CAAvB;;UAeaE,kB;;;;;cAAAA;;;;2BAAAA,kB;AAAkB,S;AAAA,kBAHlB,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAlBI,kB,EAAkB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEbA,kB,EAAkB;gBAJ9B,sDAI8B;iBAJrB;AACNE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBL,MAAtB,CAAD,CADH;AAENO,mBAAO,EAAE,CAAC,4DAAD;AAFH,W;AAIqB,U;;;;;;;;;;;;;;;;;;ACtB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA2BaC,W;;;;;cAAAA;;;;2BAAAA,W;AAAW,S;AAAA,kBAdb,CACP,4DADO,EAEP,kEAFO,EAGP,wEAHO,EAIP,6DAAaC,cAAb,CAA4B,EAA5B,CAJO,EAKP,0DALO,CAca;;;;4HAAXD,W,EAAW;AAAA,yBANhB,iEAMgB,EALhB,6DAKgB,EAJhB,oEAIgB,EAHhB,kEAGgB;AAHH,oBAVjB,4DAUiB,EATjB,kEASiB,EARjB,wEAQiB,EARC,4DAQD,EANjB,0DAMiB;AAGG,S;AATT,O;;;;;wEASFA,W,EAAW;gBAfvB,sDAeuB;iBAfd;AACRF,mBAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,wEAHO,EAIP,6DAAaG,cAAb,CAA4B,EAA5B,CAJO,EAKP,0DALO,CADD;AAQNC,wBAAY,EAAE,CACV,iEADU,EAEV,6DAFU,EAGV,oEAHU,EAIV,kEAJU;AARR,W;AAec,U","file":"users-users-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({ templateUrl: 'add-edit.component.html' })\nexport class AddEditComponent implements OnInit {\n    form: FormGroup;\n    id: string;\n    isAddMode: boolean;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.id = this.route.snapshot.params['id'];\n        this.isAddMode = !this.id;\n        \n        // password not required in edit mode\n        const passwordValidators = [Validators.minLength(6)];\n        if (this.isAddMode) {\n            passwordValidators.push(Validators.required);\n        }\n\n        this.form = this.formBuilder.group({\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            username: ['', Validators.required],\n            password: ['', passwordValidators]\n        });\n\n        if (!this.isAddMode) {\n            this.accountService.getById(this.id)\n                .pipe(first())\n                .subscribe(x => {\n                    this.f.firstName.setValue(x.firstName);\n                    this.f.lastName.setValue(x.lastName);\n                    this.f.username.setValue(x.username);\n                });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        if (this.isAddMode) {\n            this.createUser();\n        } else {\n            this.updateUser();\n        }\n    }\n\n    private createUser() {\n        this.accountService.register(this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('User added successfully', { keepAfterRouteChange: true });\n                    this.router.navigate(['.', { relativeTo: this.route }]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n\n    private updateUser() {\n        this.accountService.update(this.id, this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\n                    this.router.navigate(['..', { relativeTo: this.route }]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}","<h1 *ngIf=\"isAddMode\">Add User</h1>\n<h1 *ngIf=\"!isAddMode\">Edit User</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"firstName\">First Name</label>\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"lastName\">Last Name</label>\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"username\">Username</label>\n            <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n            <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.username.errors.required\">Username is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"password\">\n                Password\n                <em *ngIf=\"!isAddMode\">(Leave blank to keep the same password)</em>\n            </label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Save\n        </button>\n        <a routerLink=\"/users\" class=\"btn btn-link\">Cancel</a>\n    </div>\n</form>","import {Component, OnChanges, OnInit} from '@angular/core';\nimport {AccountService} from '@app/_services';\n//import {IEventEmitter} from 'ag-grid-community';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.less']\n})\nexport class GridComponent implements OnInit, OnChanges {\n  dataReady: boolean;\n  searchWord: string;\n  params: any;\n  filterarray: Array<any> = [];\n  rowData = [];\n  rowDataCopy = [];\n  columnDefs = [\n    { headerName: 'Resource Name', field: 'resourceName', sortable: true, filter: true },\n    { headerName: 'Resource Code', field: 'resourceCode', sortable: true, filter: true }\n  ];\n\n  constructor(private accountService: AccountService) {\n    this.accountService.getAll()\n      .subscribe(resources => { resources.forEach(node =>\n          this.rowData.push(node));\n                                this.rowDataCopy = [...this.rowData];\n        }\n\n      );\n    this.dataReady = true;\n   // console.log(this.rowData);\n  }\n\n  ngOnChanges(changes: import('@angular/core').SimpleChanges): void {\n       if (this.rowDataCopy != null) { this.rowDataCopy = [...this.rowData]; }\n\n    }\n\n  ngOnInit(): void {\n\n  }\n\n  onChangeSearchBar(){\n    if (!this.searchWord) {\n      this.rowDataCopy = [...this.rowData];\n      return; }\n\n    console.log('click button');\n    this.dataReady = false;\n    this.rowDataCopy = [];\n    this.rowData.forEach(e => {\n      if (e.resourceName.includes(this.searchWord)) {\n        this.rowDataCopy.push(e);\n      }\n  });\n    this.dataReady = true;\n  }\n\n}\n","<p>grid works!</p>\n<input type=\"text\" [(ngModel)]=\"searchWord\">\n<button (click)=\"onChangeSearchBar()\"> search</button>\n<div *ngIf=\"dataReady\">\n<ag-grid-angular\n  style=\"width: 1100px; height: 500px;\"\n  class=\"ag-theme-balham\"\n  [rowData]=\"rowDataCopy\"\n  [columnDefs]=\"columnDefs\"\n>\n  </ag-grid-angular>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent { }","<div class=\"p-4\">\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'list.component.html', styleUrls: ['./list.component.css'] })\nexport class ListComponent implements OnInit {\n    //users = null\n    // public columnDefs;\n    // public rowData;\n    rowData = [];\n    columnDefs = [\n      { headerName: \"Resource Name\", field: \"resourceName\" },\n      { headerName: \"Resource Code\", field: \"resourceCode\" }\n  ];\n    constructor(private accountService: AccountService) {\n        this.accountService.getAll()\n            .subscribe(resources => resources.forEach(node => this.rowData.push(node)));\n            console.log(this.rowData);\n    }\n    \n    ngOnInit() {\n    }\nonGridReady(params){\n  params.api.setRowData(this.rowData);\n  console.log(params);\n}\n    \n\n    \n\n    // deleteUser(id: string) {\n    //     const user = this.users.find(x => x.userID === id);\n    //     user.isDeleting = true;\n    //     this.accountService.delete(id)\n    //         .pipe(first())\n    //         .subscribe(() => {\n    //             this.users = this.users.filter(x => x.userID !== id) \n    //         });\n    // }\n}","\n<!-- <a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add User</a> -->\n<!-- <table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th style=\"width: 30%\">Resource Name</th>\n            <th style=\"width: 30%\">Resource Code</th> -->\n            <!-- <th style=\"width: 30%\">Username</th> -->\n            <!-- <th style=\"width: 10%\"></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let resource of resources\">\n            <td>{{resource.resourceName}}</td>\n            <td>{{resource.resourceCode}}</td> -->\n            <!-- <td>{{user.username}}</td> -->\n            <!-- <td style=\"white-space: nowrap\">\n                <a routerLink=\"edit/{{user.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\n                <button (click)=\"deleteUser(user.userID)\" class=\"btn btn-sm btn-danger btn-delete-user\" [disabled]=\"user.isDeleting\">\n                    <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\n                    <span *ngIf=\"!user.isDeleting\">Delete</span>\n                </button>\n            </td> -->\n        <!-- </tr> -->\n        <!-- <tr *ngIf=\"!users\">\n            <td colspan=\"4\" class=\"text-center\">\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\n            </td>\n        </tr> -->\n    <!-- </tbody>\n</table> -->\n\n<!-- <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n\n      <style>\n          header{background: white;}\n      </style>\n\n      <header>Header</header>\n\n<span class=\"material-icons\">\n    <a>account_circle</a>\n    </span>\n    <div>\n        <div>Resource Management\n                Project 1\n\n        </div>\n\n    </div> -->\n<app-grid></app-grid>\n<!--<ag-grid-angular-->\n<!--  style=\"width: 1100px; height: 1100px;\"-->\n<!--  class=\"ag-theme-balham\"-->\n<!--  [rowData]=\"rowData\"-->\n<!--  [columnDefs]=\"columnDefs\"-->\n<!--  (gridReady)=\"onGridReady($event)\">-->\n<!--</ag-grid-angular>-->\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: '', component: ListComponent },\n            { path: 'add', component: AddEditComponent },\n            { path: 'edit/:id', component: AddEditComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UsersRoutingModule { }","import { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\nimport { AgGridModule } from 'ag-grid-angular';\nimport { GridComponent } from './grid/grid.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UsersRoutingModule,\n    AgGridModule.withComponents([]),\n    FormsModule\n  ],\n    declarations: [\n        LayoutComponent,\n        ListComponent,\n        AddEditComponent,\n        GridComponent\n    ]\n})\nexport class UsersModule { }\n"]}